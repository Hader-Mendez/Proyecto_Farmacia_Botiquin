<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DgAACw4BQL7hQQAABPNJREFUeF7t2ruqJGUUhuEdqIkmgoqRgTegjCiezyOKihqZCCaamAgGGonmBl6G
        l+AlKMYmgxdgoHg+i4e1GAo/infT3bt7Va2//B54YZhg1t+ravd09+4zMzMzMzMzMzMzMzMzM/XP4NmR
        aKkjZUeipY6UHYmWOlJ2JFrqSNmRaKkjZUeipY5Ud69HD1/9Y0+01JHq7LXor+jn6LH8i45oqZpdzHTx
        pz22vQn0YlN2uPnFn2p5E8wPOc8Oc97Fn2p3E9AhNdtfvuD7O6I9aj9FbV4Y0gE1298D0Q8R7XFem2cC
        OpxmhxnuJqCDaXa4oW4COpRmFzPMTUAH0uzihrgJ6DCaHaf9TUAH0ex4rW8COoRmp9H2JqADaHY6LW8C
        Gq7ZabW7CWiwZqfX6iagoZrVaHMT0EDN6rS4CWiY9n9wS/Ry9GH0cXQl+ib6PaKdrFXJbxFpkLZVN0Zv
        RJ9E+/wKt0snvwloiLY1t0YfRD9G9HhH6KQ3AQ3QtuKa6M3o+4ge52id7DUB/ePaFtwefRbR4xu1fBZ4
        JDoa/ePa6J6NvovosY1aXvxHo5OgAdrIXon+iOhxjVo+9T8enQwN0Ub1ajTSq/t9KvksgAZpI8qn/T8j
        ejznlR/IfBTlN3vvjm6Oro0qPRTt+27k5D/5ExqmjSZf8H0b0WOhvozy84DroyU9GK1+8RMN1EaSb/X2
        fbX/W/RedEO0tEM+Av4leiIqQ0O1kbwV0WOY91V0krdQF3BftO9nEXnxn4xK0WBtFPkJ3z4/VZ9Ht0Vr
        uDc65OJfjsrRcG0U+fEunV/Ln/x8jbCGS1H+gonONS//e8oXsougA2gjyF/s7HpBlUu9P1rDPdG+H0b9
        Gj0VLYYOoY0gX8XT2bV8wbeGfEu577uSvPhPR4uig2gj+DSis0/lW701Xu3fFe37tL/KxU90GK27/DLH
        rk/88hliaYf+n/9MtAo6kNZdfpOHzj2Vrw2W/um/M/o6ovPMy28dPR+thg6ldZdf46JzT+XHu0s65OIv
        +mr/PHQwrbv8Dh+deyo/21/KHdFQFz/R4bTuvojo3FP5Fmwpb0d0hnn5tP9c1AIdUOtu10/cTdGS3o/o
        HFOr/58/R4fUutv11e3roqW9E9FZ8qwvRK3QQbXu6MzaWuY3QX4z6cWoHT0k1R2dWVvTdBO0vfhpvrB5
        3dGZtbW9G7109Y890dK07ujMmu1AS9O6ozNrtgMtTeuOzqzZDrQ0rTs6s2Y70NK07ujMmu1AS9O6ozNr
        tgMtTeuOzqzZDrQ0zTaOLrpmG0cXXbONo4uu2cbRRdds4+iia7ZxdNE12zi66JptHF10zTaOLrpmG0cX
        XbNatHOtHA3VrBbtXCtHQzWrRTvXytFQzWrRzrVyNFSzWrRzrRwN1awW7VwrR0M1q0U718rRUM1q0c61
        cjRUs1q0c60cDdWsFu1cK0dDNatFO9fK0VDNatHOtXI0VLNatHOtHA3VrBbtXCtHQzWrRTvXytFQzWrR
        zrVyNFSzWrRzrRwN1awW7VwrR0M1q0U718rRUM1q0c61cjRUs1q0c60cDdWsFu1cK0dDNatFO9fK0VDN
        atHOtXI0VLNatHOtHA3VrBbtXCtHQzWrRTvXytFQ16dyNNT1qRwNdX0qR0Ndn8rRUNencjTU9akcDXV9
        KkdDXZ/MzMzMzMzMzMzMzP5zdvYvD90x56s3MjcAAAAASUVORK5CYII=
</value>
  </data>
</root>